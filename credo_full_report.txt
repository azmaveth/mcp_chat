Checking 72 source files (this might take a while) ...

  Software Design                                                               
┃ 
┃ [D] → Found a TODO tag in a comment: # TODO: Implement reconnection logic
┃       lib/mcp_chat/mcp/sse_client.ex:294:5 #(MCPChat.MCP.SSEClient.handle_info)
┃ [D] → Found a TODO tag in a comment: # TODO: Implement reconnection logic
┃       lib/mcp_chat/mcp/sse_client.ex:287:5 #(MCPChat.MCP.SSEClient.handle_info)
┃ [D] → Found a TODO tag in a comment: # TODO: Validate model against current 
┃       backend
┃       lib/mcp_chat/cli/commands.ex:459:5 #(MCPChat.CLI.Commands.switch_model)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp/server_manager.ex:246:21 #(MCPChat.MCP.ServerManager.handle_info)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:1105:12 #(MCPChat.CLI.Commands.unload_model)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:1081:22 #(MCPChat.CLI.Commands.load_model)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:1078:12 #(MCPChat.CLI.Commands.load_model)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:870:14 #(MCPChat.CLI.Commands.get_prompt)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:832:14 #(MCPChat.CLI.Commands.read_resource)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:785:14 #(MCPChat.CLI.Commands.call_tool)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:365:9 #(MCPChat.CLI.Commands.disconnect_server)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:360:10 #(MCPChat.CLI.Commands.disconnect_server)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:342:11 #(MCPChat.CLI.Commands.connect_server)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:336:12 #(MCPChat.CLI.Commands.connect_server)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:100:11 #(MCPChat.MCPServer.SSEServer.Router.monitor_connection)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:100:11 #(MCPChat.MCPServer.SSEServer.Router.monitor_connection)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:79:30 #(MCPChat.MCPServer.SSEServer.Router.handle_sse_connection)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:79:30 #(MCPChat.MCPServer.SSEServer.Router.handle_sse_connection)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp/discovery.ex:36:20 #(MCPChat.MCP.Discovery.quick_setup_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp/discovery.ex:34:12 #(MCPChat.MCP.Discovery.quick_setup_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp/discovery.ex:32:5 #(MCPChat.MCP.Discovery.quick_setup_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:1124:18 #(MCPChat.CLI.Commands.show_acceleration_info)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:1039:10 #(MCPChat.CLI.Commands.fetch_and_display_local_models)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:425:15 #(MCPChat.CLI.Commands.list_prompts)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:406:17 #(MCPChat.CLI.Commands.list_resources)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:380:13 #(MCPChat.CLI.Commands.list_tools)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:219:18 #(MCPChat.CLI.Commands.discover_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:196:27 #(MCPChat.CLI.Commands.list_saved_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:191:21 #(MCPChat.CLI.Commands.list_saved_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:172:15 #(MCPChat.CLI.Commands.list_servers)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/commands.ex:163:31 #(MCPChat.CLI.Commands.show_config)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/chat.ex:26:10 #(MCPChat.CLI.Chat.chat_loop)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/cli/chat.ex:15:5 #(MCPChat.CLI.Chat.start)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat.ex:69:5 #(MCPChat.start_app)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/mcp_chat/cli/commands_test.exs:402:25 #(MCPChat.CLI.CommandsTest.ensure_services_started)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/llm_backend_integration_test.exs:314:14 #(MCPChat.LLMBackendIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/llm_backend_integration_test.exs:300:20 #(MCPChat.LLMBackendIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/llm_backend_integration_test.exs:299:19 #(MCPChat.LLMBackendIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/llm_backend_integration_test.exs:273:22 #(MCPChat.LLMBackendIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:142:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:131:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:112:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:94:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:73:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       test/integration/basic_integration_test.exs:58:9 #(MCPChat.BasicIntegrationTest)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:38:31 #(MCPChat.MCPServer.SSEServer.Router)
┃ [D] ↘ Nested modules could be aliased at the top of the invoking module.
┃       lib/mcp_chat/mcp_server/sse_server.ex:38:31 #(MCPChat.MCPServer.SSEServer.Router)

  Code Readability                                                              
┃ 
┃ [R] ↗ Predicate function names should not start with 'is', and should end in a 
┃       question mark.
┃       lib/mcp_chat/alias.ex:197:8 #(MCPChat.Alias.is_reserved_command?)
┃ [R] ↗ Predicate function names should not start with 'is', and should end in a 
┃       question mark.
┃       lib/mcp_chat/alias.ex:56:7 #(MCPChat.Alias.is_alias?)
┃ [R] ↗ Numbers larger than 9999 should be written with underscores: 
┃       3_826_793_472
┃       test/mcp_chat/llm/ollama_test.exs:66:33 #(MCPChat.LLM.OllamaTest)
┃ [R] ↗ Numbers larger than 9999 should be written with underscores: 
┃       1_073_741_824
┃       test/mcp_chat/llm/ollama_test.exs:65:33 #(MCPChat.LLM.OllamaTest)
┃ [R] ↗ Numbers larger than 9999 should be written with underscores: 
┃       1_677_652_288
┃       test/integration/llm_backend_integration_test.exs:202:22 #(MCPChat.LLMBackendIntegrationTest)
┃ [R] ↗ Numbers larger than 9999 should be written with underscores: 
┃       1_677_652_288
┃       test/integration/llm_backend_integration_test.exs:172:22 #(MCPChat.LLMBackendIntegrationTest)
┃ [R] → Modules should have a @moduledoc tag.
┃       lib/mcp_chat/mcp_server/sse_server.ex:11:13 #(MCPChat.MCPServer.SSEServer.Router)
┃ [R] ↘ Prefer using an implicit `try` rather than explicit `try`.
┃       lib/mcp_chat/mcp/demo_server.ex:159:5 #(MCPChat.MCP.DemoServer.calculate)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:294:8 #(MCPChat.Session.get_default_backend)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:289:8 #(MCPChat.Session.generate_session_id)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:101:7 #(MCPChat.Session.get_session_cost)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:87:7 #(MCPChat.Session.get_context_stats)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:55:7 #(MCPChat.Session.list_saved_sessions)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:39:7 #(MCPChat.Session.clear_session)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/session.ex:35:7 #(MCPChat.Session.get_current_session)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/persistence.ex:112:8 #(MCPChat.Persistence.ensure_sessions_dir)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/persistence.ex:108:8 #(MCPChat.Persistence.sessions_dir)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/persistence.ex:56:7 #(MCPChat.Persistence.list_sessions)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp_server/stdio_server.ex:74:8 #(MCPChat.MCPServer.StdioServer.read_loop)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp_server/stdio_server.ex:22:7 #(MCPChat.MCPServer.StdioServer.stop)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp_server/stdio_server.ex:18:7 #(MCPChat.MCPServer.StdioServer.start)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp_server/sse_server.ex:266:8 #(MCPChat.MCPServer.SSEServer.generate_connection_id)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_persistence.ex:134:7 #(MCPChat.MCP.ServerPersistence.saved_servers_file)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_manager.ex:54:7 #(MCPChat.MCP.ServerManager.list_all_prompts)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_manager.ex:46:7 #(MCPChat.MCP.ServerManager.list_all_resources)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_manager.ex:38:7 #(MCPChat.MCP.ServerManager.list_all_tools)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_manager.ex:30:7 #(MCPChat.MCP.ServerManager.list_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/server_manager.ex:18:7 #(MCPChat.MCP.ServerManager.start_configured_servers)
┃ [R] ↘ The alias `MCPChat.MCP.Server` is not alphabetically ordered among its 
┃       group.
┃       lib/mcp_chat/mcp/server_manager.ex:7:9 #(MCPChat.MCP.ServerManager)
┃ [R] ↘ The alias `MCPChat.MCP.StdioClient` is not alphabetically ordered among 
┃       its group.
┃       lib/mcp_chat/mcp/server.ex:7:9 #(MCPChat.MCP.Server)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/protocol.ex:128:8 #(MCPChat.MCP.Protocol.generate_id)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/protocol.ex:75:7 #(MCPChat.MCP.Protocol.encode_list_prompts)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/protocol.ex:55:7 #(MCPChat.MCP.Protocol.encode_list_resources)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/protocol.ex:34:7 #(MCPChat.MCP.Protocol.encode_list_tools)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/protocol.ex:26:7 #(MCPChat.MCP.Protocol.encode_initialized)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/discovery.ex:81:7 #(MCPChat.MCP.Discovery.discover_known_locations)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/discovery.ex:69:7 #(MCPChat.MCP.Discovery.discover_env_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/discovery.ex:55:7 #(MCPChat.MCP.Discovery.discover_npm_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/discovery.ex:31:7 #(MCPChat.MCP.Discovery.quick_setup_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/builtin_resources.ex:319:8 #(MCPChat.MCP.BuiltinResources.generate_command_reference)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/builtin_resources.ex:158:7 #(MCPChat.MCP.BuiltinResources.list_prompts)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/mcp/builtin_resources.ex:10:7 #(MCPChat.MCP.BuiltinResources.list_resources)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:202:8 #(MCPChat.LLM.OpenAI.get_base_url)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:191:8 #(MCPChat.LLM.OpenAI.get_api_key)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:187:8 #(MCPChat.LLM.OpenAI.get_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:174:8 #(MCPChat.LLM.OpenAI.fallback_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:142:8 #(MCPChat.LLM.OpenAI.fetch_models_from_api)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:130:7 #(MCPChat.LLM.OpenAI.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:118:7 #(MCPChat.LLM.OpenAI.available_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/openai.ex:113:7 #(MCPChat.LLM.OpenAI.default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:166:8 #(MCPChat.LLM.Ollama.check_ollama_status)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:161:8 #(MCPChat.LLM.Ollama.get_default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:151:8 #(MCPChat.LLM.Ollama.get_base_url)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:147:8 #(MCPChat.LLM.Ollama.get_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:101:7 #(MCPChat.LLM.Ollama.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/ollama.ex:96:7 #(MCPChat.LLM.Ollama.default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/model_loader.ex:49:7 #(MCPChat.LLM.ModelLoader.get_acceleration_info)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/model_loader.ex:35:7 #(MCPChat.LLM.ModelLoader.list_loaded_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/local.ex:148:7 #(MCPChat.LLM.Local.loaded_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/local.ex:129:7 #(MCPChat.LLM.Local.available_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/local.ex:46:7 #(MCPChat.LLM.Local.list_models)
┃ [R] ↘ The alias `MCPChat.LLM.ModelLoader` is not alphabetically ordered among 
┃       its group.
┃       lib/mcp_chat/llm/local.ex:9:9 #(MCPChat.LLM.Local)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/gemini.ex:98:8 #(MCPChat.LLM.Gemini.get_api_key)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/gemini.ex:94:8 #(MCPChat.LLM.Gemini.get_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/gemini.ex:76:7 #(MCPChat.LLM.Gemini.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/gemini.ex:70:7 #(MCPChat.LLM.Gemini.default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:317:7 #(MCPChat.LLM.EXLAConfig.optimize_memory)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:297:7 #(MCPChat.LLM.EXLAConfig.enable_mixed_precision)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:265:8 #(MCPChat.LLM.EXLAConfig.get_optimal_sequence_length)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:236:8 #(MCPChat.LLM.EXLAConfig.get_optimal_batch_size)
┃ [R] ↘ Prefer using an implicit `try` rather than explicit `try`.
┃       lib/mcp_chat/llm/exla_config.ex:219:5 #(MCPChat.LLM.EXLAConfig.metal_memory_info)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:217:8 #(MCPChat.LLM.EXLAConfig.metal_memory_info)
┃ [R] ↘ Prefer using an implicit `try` rather than explicit `try`.
┃       lib/mcp_chat/llm/exla_config.ex:195:5 #(MCPChat.LLM.EXLAConfig.cuda_memory_info)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:194:8 #(MCPChat.LLM.EXLAConfig.cuda_memory_info)
┃ [R] ↘ Prefer using an implicit `try` rather than explicit `try`.
┃       lib/mcp_chat/llm/exla_config.ex:186:5 #(MCPChat.LLM.EXLAConfig.cuda_device_count)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:185:8 #(MCPChat.LLM.EXLAConfig.cuda_device_count)
┃ [R] ↘ Prefer using an implicit `try` rather than explicit `try`.
┃       lib/mcp_chat/llm/exla_config.ex:177:5 #(MCPChat.LLM.EXLAConfig.check_cuda_runtime)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:176:8 #(MCPChat.LLM.EXLAConfig.check_cuda_runtime)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:123:7 #(MCPChat.LLM.EXLAConfig.acceleration_info)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:86:7 #(MCPChat.LLM.EXLAConfig.determine_backend_options)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:38:7 #(MCPChat.LLM.EXLAConfig.serving_options)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/exla_config.ex:12:7 #(MCPChat.LLM.EXLAConfig.configure_backend)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:460:8 #(MCPChat.LLM.Bedrock.load_ecs_task_credentials)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:432:8 #(MCPChat.LLM.Bedrock.load_instance_credentials)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:119:8 #(MCPChat.LLM.Bedrock.get_bedrock_client)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:87:8 #(MCPChat.LLM.Bedrock.get_aws_credentials)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:83:8 #(MCPChat.LLM.Bedrock.get_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:71:7 #(MCPChat.LLM.Bedrock.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/bedrock.ex:65:7 #(MCPChat.LLM.Bedrock.default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:224:8 #(MCPChat.LLM.Anthropic.get_base_url)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:213:8 #(MCPChat.LLM.Anthropic.get_api_key)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:209:8 #(MCPChat.LLM.Anthropic.get_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:190:8 #(MCPChat.LLM.Anthropic.fallback_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:152:8 #(MCPChat.LLM.Anthropic.fetch_models_from_api)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:140:7 #(MCPChat.LLM.Anthropic.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:123:7 #(MCPChat.LLM.Anthropic.available_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/llm/anthropic.ex:118:7 #(MCPChat.LLM.Anthropic.default_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cost.ex:149:7 #(MCPChat.Cost.list_pricing)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/context.ex:172:8 #(MCPChat.Context.default_summary_prompt)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/config.ex:138:8 #(MCPChat.Config.default_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/config.ex:36:7 #(MCPChat.Config.get_all)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/config.ex:32:7 #(MCPChat.Config.config_dir)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/config.ex:28:7 #(MCPChat.Config.reload)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/simple_line_reader.ex:87:8 #(MCPChat.CLI.SimpleLineReader.load_history)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:79:7 #(MCPChat.CLI.Renderer.end_stream)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:63:7 #(MCPChat.CLI.Renderer.show_thinking)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:44:7 #(MCPChat.CLI.Renderer.format_prompt)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:36:7 #(MCPChat.CLI.Renderer.show_goodbye)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:22:7 #(MCPChat.CLI.Renderer.show_welcome)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/renderer.ex:17:7 #(MCPChat.CLI.Renderer.clear_screen)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/line_editor.ex:509:8 #(MCPChat.CLI.LineEditor.load_history)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/line_editor.ex:495:8 #(MCPChat.CLI.LineEditor.clear_screen)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/line_editor.ex:239:8 #(MCPChat.CLI.LineEditor.read_key)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:1122:8 #(MCPChat.CLI.Commands.show_acceleration_info)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:1038:8 #(MCPChat.CLI.Commands.fetch_and_display_local_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:975:8 #(MCPChat.CLI.Commands.list_models)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:932:8 #(MCPChat.CLI.Commands.list_sessions)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:753:8 #(MCPChat.CLI.Commands.get_current_model)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:663:8 #(MCPChat.CLI.Commands.list_aliases)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:585:8 #(MCPChat.CLI.Commands.show_session_cost)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:501:8 #(MCPChat.CLI.Commands.show_context_stats)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:424:8 #(MCPChat.CLI.Commands.list_prompts)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:405:8 #(MCPChat.CLI.Commands.list_resources)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:379:8 #(MCPChat.CLI.Commands.list_tools)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:215:8 #(MCPChat.CLI.Commands.discover_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:190:8 #(MCPChat.CLI.Commands.list_saved_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:171:8 #(MCPChat.CLI.Commands.list_servers)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:159:8 #(MCPChat.CLI.Commands.show_config)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:154:8 #(MCPChat.CLI.Commands.new_conversation)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:128:8 #(MCPChat.CLI.Commands.show_history)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:124:8 #(MCPChat.CLI.Commands.clear_screen)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/commands.ex:113:8 #(MCPChat.CLI.Commands.show_help)
┃ [R] ↘ The alias `MCPChat` is not alphabetically ordered among its group.
┃       lib/mcp_chat/cli/commands.ex:8:9 #(MCPChat.CLI.Commands)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/chat.ex:21:8 #(MCPChat.CLI.Chat.chat_loop)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/cli/chat.ex:10:7 #(MCPChat.CLI.Chat.start)
┃ [R] ↘ The alias `MCPChat.Session` is not alphabetically ordered among its 
┃       group.
┃       lib/mcp_chat/cli/chat.ex:6:18 #(MCPChat.CLI.Chat)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/alias.ex:162:8 #(MCPChat.Alias.load_aliases)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/alias.ex:66:7 #(MCPChat.Alias.save_aliases)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/alias.ex:42:7 #(MCPChat.Alias.list_aliases)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/llm/openai_test.exs:260:8 #(MCPChat.LLM.OpenAITest.ensure_config_started)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/llm/anthropic_test.exs:190:8 #(MCPChat.LLM.AnthropicTest.ensure_config_started)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/config_test.exs:272:8 #(MCPChat.ConfigTest.get_config_path)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/config_test.exs:246:8 #(MCPChat.ConfigTest.ensure_config_started)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/cli/commands_test.exs:387:8 #(MCPChat.CLI.CommandsTest.ensure_services_started)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       test/mcp_chat/application_test.exs:254:8 #(MCPChat.ApplicationTest.stop_supervised_processes)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat/application.ex:29:8 #(MCPChat.Application.mcp_server_children)
┃ [R] ↘ Do not use parentheses when defining a function which has no arguments.
┃       lib/mcp_chat.ex:46:8 #(MCPChat.show_help)

  Refactoring opportunities                                                     
┃ 
┃ [F] ↗ `Enum.map_join/3` is more efficient than `Enum.map/2 |> Enum.join/2`.
┃       lib/mcp_chat/persistence.ex:287:7 #(MCPChat.Persistence.export_as_markdown)
┃ [F] ↗ `Enum.map_join/3` is more efficient than `Enum.map/2 |> Enum.join/2`.
┃       lib/mcp_chat/mcp_server/handler.ex:357:5 #(MCPChat.MCPServer.Handler.format_history)
┃ [F] ↗ `Enum.map_join/3` is more efficient than `Enum.map/2 |> Enum.join/2`.
┃       lib/mcp_chat/llm/local.ex:191:9 #(MCPChat.LLM.Local.format_messages)
┃ [F] ↗ `Enum.map_join/3` is more efficient than `Enum.map/2 |> Enum.join/2`.
┃       lib/mcp_chat/llm/local.ex:168:7 #(MCPChat.LLM.Local.format_prompt)
┃ [F] ↗ `Enum.map_join/3` is more efficient than `Enum.map/2 |> Enum.join/2`.
┃       lib/mcp_chat/llm/bedrock.ex:235:5 #(MCPChat.LLM.Bedrock.messages_to_text)
┃ [F] ↗ Avoid negated conditions in if-else blocks.
┃       lib/mcp_chat/cli/chat.ex:106:8 #(MCPChat.CLI.Chat.get_llm_response)
┃ [F] → Function body is nested too deep (max depth is 2, was 4).
┃       lib/mcp_chat/alias.ex:256:13 #(MCPChat.Alias.expand_commands)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/ollama.ex:198:15 #(MCPChat.LLM.Ollama.receive_loop)
┃ [F] → Function is too complex (cyclomatic complexity is 12, max is 9).
┃       lib/mcp_chat/mcp_server/sse_server.ex:186:7 #(MCPChat.MCPServer.SSEServer.handle_call)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/mcp_chat/mcp/client.ex:145:8 #(MCPChat.MCP.Client.handle_result)
┃ [F] → Function is too complex (cyclomatic complexity is 37, max is 9).
┃       lib/mcp_chat/cli/commands.ex:65:7 #(MCPChat.CLI.Commands.handle_command)
┃ [F] → Function is too complex (cyclomatic complexity is 21, max is 9).
┃       lib/mcp_chat/cli/line_editor.ex:124:8 #(MCPChat.CLI.LineEditor.read_loop)
┃ [F] → Function is too complex (cyclomatic complexity is 15, max is 9).
┃       lib/mcp_chat/mcp/server_manager.ex:287:8 #(MCPChat.MCP.ServerManager.start_server_supervised)
┃ [F] → Function is too complex (cyclomatic complexity is 14, max is 9).
┃       lib/mcp_chat/cli/line_editor.ex:191:8 #(MCPChat.CLI.LineEditor.read_escape_sequence)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/persistence.ex:167:11 #(MCPChat.Persistence.find_session_file)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/mcp/sse_client.ex:397:13 #(MCPChat.MCP.SSEClient.parse_sse_event)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/mcp/server_persistence.ex:82:11 #(MCPChat.MCP.ServerPersistence.load_all_servers)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/mcp/server_manager.ex:257:11 #(MCPChat.MCP.ServerManager.handle_info)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/mcp/server.ex:342:13 #(MCPChat.MCP.Server.start_server_process)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/mcp/demo_server.ex:284:15 #(MCPChat.MCP.DemoServer.analyze_text)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/openai.ex:76:11 #(MCPChat.LLM.OpenAI.stream_chat)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/local.ex:159:11 #(MCPChat.LLM.Local.format_prompt)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/gemini.ex:374:13 #(MCPChat.LLM.Gemini.parse_sse_data)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/bedrock.ex:532:11 #(MCPChat.LLM.Bedrock.find_credential)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/bedrock.ex:341:13 #(MCPChat.LLM.Bedrock.parse_streaming_chunk)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/llm/anthropic.ex:81:11 #(MCPChat.LLM.Anthropic.stream_chat)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/line_editor.ex:213:13 #(MCPChat.CLI.LineEditor.read_escape_sequence)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:874:33 #(MCPChat.CLI.Commands.get_prompt)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:789:13 #(MCPChat.CLI.Commands.call_tool)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:705:13 #(MCPChat.CLI.Commands.handle_alias)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:323:34 #(MCPChat.CLI.Commands.connect_server)
┃ [F] → Function is too complex (cyclomatic complexity is 13, max is 9).
┃       lib/mcp_chat/cli/commands.ex:766:8 #(MCPChat.CLI.Commands.call_tool)
┃ [F] → Function is too complex (cyclomatic complexity is 12, max is 9).
┃       lib/mcp_chat/cli/commands.ex:1002:8 #(MCPChat.CLI.Commands.fetch_and_display_models)
┃ [F] → Function is too complex (cyclomatic complexity is 11, max is 9).
┃       lib/mcp_chat/llm/bedrock.ex:333:8 #(MCPChat.LLM.Bedrock.parse_streaming_chunk)
┃ [F] → Function is too complex (cyclomatic complexity is 11, max is 9).
┃       lib/mcp_chat/llm/bedrock.ex:296:8 #(MCPChat.LLM.Bedrock.parse_response)
┃ [F] → Function is too complex (cyclomatic complexity is 11, max is 9).
┃       lib/mcp_chat/cli/chat.ex:88:8 #(MCPChat.CLI.Chat.get_llm_response)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/mcp_chat/cli/commands.ex:852:8 #(MCPChat.CLI.Commands.get_prompt)
┃ [F] → Function body is nested too deep (max depth is 2, was 4).
┃       lib/mcp_chat/alias.ex:171:32 #(MCPChat.Alias.load_aliases)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:1158:11 #(MCPChat.CLI.Commands.show_acceleration_info)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:1046:15 #(MCPChat.CLI.Commands.fetch_and_display_local_models)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:939:32 #(MCPChat.CLI.Commands.list_sessions)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:679:22 #(MCPChat.CLI.Commands.list_aliases)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:392:33 #(MCPChat.CLI.Commands.list_tools)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:240:11 #(MCPChat.CLI.Commands.discover_servers)
┃ [F] → Function body is nested too deep (max depth is 2, was 3).
┃       lib/mcp_chat/cli/commands.ex:138:11 #(MCPChat.CLI.Commands.show_history)
┃ [F] → Function is too complex (cyclomatic complexity is 12, max is 9).
┃       lib/mcp_chat/llm/exla_config.ex:265:8 #(MCPChat.LLM.EXLAConfig.get_optimal_sequence_length)
┃ [F] → Function is too complex (cyclomatic complexity is 12, max is 9).
┃       lib/mcp_chat/llm/exla_config.ex:236:8 #(MCPChat.LLM.EXLAConfig.get_optimal_batch_size)
┃ [F] → Function is too complex (cyclomatic complexity is 12, max is 9).
┃       lib/mcp_chat/cli/commands.ex:1122:8 #(MCPChat.CLI.Commands.show_acceleration_info)
┃ [F] → Function is too complex (cyclomatic complexity is 11, max is 9).
┃       lib/mcp_chat/llm/exla_config.ex:123:7 #(MCPChat.LLM.EXLAConfig.acceleration_info)
┃ [F] → Function is too complex (cyclomatic complexity is 10, max is 9).
┃       lib/mcp_chat/cli/commands.ex:753:8 #(MCPChat.CLI.Commands.get_current_model)

Please report incorrect results: https://github.com/rrrene/credo/issues

Analysis took 0.1 seconds (0.02s to load, 0.1s running 66 checks on 72 files)
824 mods/funs, found 50 refactoring opportunities, 147 code readability issues, 47 software design suggestions.

Use `mix credo explain` to explain issues, `mix credo --help` for options.
